from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession


from utils.logger import get_logger
from typing import Union

from keyboard.inline.inline_buttons import portfolio_button, menu_button, settings_button, help_keyboard

from services.portfolio_service import show_portfolio

from db.crud import get_or_create_user


logger = get_logger(__name__)
base_commands_router = Router()



@base_commands_router.message(CommandStart())
async def start_command(message: Message, session: AsyncSession, state:FSMContext):
    welcome_text = ("üìä –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫  \n\n "
                    "üí∞ –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å ‚Äì –±–∞–ª–∞–Ω—Å –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å  \n"
                    "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äì —Ä—ã–Ω–æ—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã \n"
                    "üîç –ò–¥–µ–∏ ‚Äì –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤—ã \n\n"
                    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ | ‚ÑπÔ∏è –ü–æ–º–æ—â—å  ")

    await state.clear()
    await get_or_create_user(session=session, tg_id=message.from_user.id)
    await message.answer(welcome_text, reply_markup=menu_button())


@base_commands_router.callback_query(F.data == 'go_menu')
@base_commands_router.message(Command('menu'))
async def menu_command(update: Union[Message, CallbackQuery]):
    welcome_text = ("üìä –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫  \n\n "
                    "üí∞ –ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å ‚Äì –±–∞–ª–∞–Ω—Å –∏ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å  \n"
                    "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ‚Äì —Ä—ã–Ω–æ—á–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã \n"
                    "üîç –ò–¥–µ–∏ ‚Äì –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–µ –∞–∫—Ç–∏–≤—ã \n\n"
                    "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ | ‚ÑπÔ∏è –ü–æ–º–æ—â—å  ")


    if isinstance(update, CallbackQuery):
        await update.message.answer(welcome_text, reply_markup=menu_button())
        await update.answer()
    else:
        await update.answer(welcome_text, reply_markup=menu_button())


@base_commands_router.callback_query(F.data == "portfolio_button")
@base_commands_router.message(Command('portfolio'))
async def show_profile_command(update: Union[Message, CallbackQuery]):
    result = await show_portfolio(tg_id=update.from_user.id)
    portfolio_text = ('–í–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å: \n\n'
                      f'–¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: {result.get('total_price')} {result.get('currency')}'
                      '\n–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á: '   
                      '\n–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∞–∫—Ç–∏–≤–∞–º (–∫—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞)' # –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ñ–æ—Ç–∫–æ–π –≤ —á–∞—Ç –∞ —Å–Ω–∏–∑—É –ø–æ–¥–ø–∏—Å—å 
                      '\n–¶–µ–ª—å —Ü–µ–Ω–æ–≤—ã—Ö —É—Ä–æ–≤–Ω–µ–π')

    # —Ñ—É–Ω–∫—Ü–∏—è –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å
    # —Ñ—É–Ω–∫—Ü–∏—è –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞ 24—á:
    # —Ñ—É–Ω–∫—Ü–∏—è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∞–∫—Ç–∏–≤–∞–º
    # —Ñ—É–Ω–∫—Ü–∏—è –¶–µ–ª—å —Ü–µ–Ω–æ–≤—ã—Ö —É—Ä–æ–≤–Ω–µ–π
    if isinstance(update, CallbackQuery):
        await update.message.answer(portfolio_text, reply_markup=portfolio_button())
        await update.answer()
    else:
        await update.answer(portfolio_text, reply_markup=portfolio_button())


@base_commands_router.callback_query(F.data == "help_button")
@base_commands_router.message(Command('help'))
async def help_handler(update: Union[Message, CallbackQuery]):
    help_text = ('üÜò –ö—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞\n\n'
                 '–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:  \n\n/start ‚Äì –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç '
                 '\n/portfolio ‚Äì –≤–∞—à –ø–æ—Ä—Ç—Ñ–µ–ª—å '
                 '\n/analytics ‚Äì —Ä—ã–Ω–æ—á–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ '
                 '\n/settings ‚Äì –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ '
                 '\n\n–ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É –∏–ª–∏ –∂–µ–ª–∞–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ç–∑—ã–≤" –Ω–∏–∂–µ.')

    if isinstance(update, CallbackQuery):
        await update.message.answer(help_text, reply_markup=help_keyboard())
        await update.answer()
    else:
        await update.answer(help_text, reply_markup=help_keyboard())



@base_commands_router.callback_query(F.data == "settings_button")
@base_commands_router.message(Command('settings'))
async def settings_handler(update: Union[Message, CallbackQuery]):
    setting_text = (
        "–í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –≤–∞–ª—é—Ç—ã, –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ—á—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤ –ø–æ –∫—É—Ä—Å—É –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –≤–∞—Å –≤–∞–ª—é—Ç \n\n"
        "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í—ã–∫–ª"
                    "\n–í–∞–ª—é—Ç–∞: USD"
                    "\n–ü–æ—á—Ç–∞: \n\n")

    if isinstance(update, CallbackQuery):
        await update.message.answer(setting_text, reply_markup=settings_button())
        await update.answer()
    else:
        await update.answer(setting_text, reply_markup=settings_button())






